name: Accuracy Report
on:
  workflow_dispatch:
    inputs:
      vllm-ascend-branch:
        description: 'vllm-ascend branch:'
        required: true
        type: choice
        options:
          - main
          - v0.9.0rc2
          - v0.9.0-dev
          - v0.7.3-dev
      benchmark-branch:
        description: 'benchmark-branch:'
        required: true
        type: choice
        options:
          - main
          - accuarcy-test-dev-2
      models:  
        description: 'models (choose "all" for all models):'
        required: true
        type: choice
        options:
          - all
          - Qwen/Qwen2.5-7B-Instruct
          - Qwen/Qwen2.5-VL-7B-Instruct
          - Qwen/Qwen3-8B-Base
        default: 'all'

jobs:
  download_reports:
    runs-on: ubuntu-latest
    env:
      UPSTREAM_REPO: nv-action/vllm-benchmarks
    strategy:
      matrix:
        model: ${{ fromJSON(
          (github.event.inputs.models == 'all' &&
            '["Qwen/Qwen2.5-7B-Instruct","Qwen/Qwen2.5-VL-7B-Instruct","Qwen/Qwen3-8B-Base"]') ||
          (github.event.inputs.models == 'Qwen/Qwen2.5-7B-Instruct' &&
            '["Qwen/Qwen2.5-7B-Instruct"]') ||
          (github.event.inputs.models == 'Qwen/Qwen2.5-VL-7B-Instruct' &&
            '["Qwen/Qwen2.5-VL-7B-Instruct"]') ||
          (github.event.inputs.models == 'Qwen/Qwen3-8B-Base' &&
            '["Qwen/Qwen3-8B-Base"]')
         ) }}
        
        version: [0, 1]
        exclude:
          - model: 'Qwen/Qwen2.5-VL-7B-Instruct'
            version: 1
      fail-fast: false     

    name: Download ${{ matrix.model }} V${{ matrix.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Get base model name
        id: get_basename
        run: |
          model_base_name=$(basename "${{ matrix.model }}")
          echo "model_base_name=$model_base_name" >> $GITHUB_OUTPUT
        shell: bash

      - name: Query artifact run id
        id: get_run_id
        run: |
          ARTIFACT_PATTERN="${{ github.event.inputs.vllm-ascend-branch }}-${{ steps.get_basename.outputs.model_base_name }}-V${{ matrix.version }}-report"
          echo "Querying artifacts with pattern: $ARTIFACT_PATTERN"
          
          ARTIFACT_JSON=$(gh api --paginate /repos/${{ env.UPSTREAM_REPO }}/actions/artifacts || echo "{}")
          
          RUN_ID=$(echo "$ARTIFACT_JSON" | \
            jq -s -r --arg pattern "$ARTIFACT_PATTERN" \
            '[.[].artifacts[]] | map(select(.name | test($pattern))) | sort_by(.created_at) | last | .workflow_run.id // empty')
          
          if [ -z "$RUN_ID" ]; then
            echo "::warning::No artifact found matching pattern $ARTIFACT_PATTERN. Skipping download."
            echo "runid=" >> $GITHUB_OUTPUT
          else
            echo "Found matching artifact with run ID: $RUN_ID"
            echo "runid=$RUN_ID" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Download Artifact
        if: ${{ steps.get_run_id.outputs.runid != '' }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.inputs.vllm-ascend-branch }}-${{ steps.get_basename.outputs.model_base_name }}-V${{ matrix.version }}-report
          path: ./accuracy/accuracy_report_bak
          github-token: ${{ secrets.PAT_TOKEN }}
          repository: ${{ env.UPSTREAM_REPO }} 
          run-id: ${{ steps.get_run_id.outputs.runid }}
          
      - name: Upload reports artifact
        if: ${{ steps.get_run_id.outputs.runid != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: report-${{ steps.get_basename.outputs.model_base_name }}-v${{ matrix.version }}
          path: ./accuracy/accuracy_report_bak/*.md
          retention-days: 1
  create_pr:
    runs-on: ubuntu-latest
    needs: download_reports
    env:
      UPSTREAM_REPO: nv-action/vllm-benchmarks
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          ref: main

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/${{ env.UPSTREAM_REPO }}.git
          git fetch upstream
          git remote -v
      - name: Set Git user info dynamically
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
      - name: Create or switch to branch
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          BRANCH_NAME="auto-pr/accuracy-report-${TIMESTAMP}"
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
          git checkout -B "${BRANCH_NAME}" upstream/${{ github.event.inputs.benchmark-branch }}
      - name: Setup workspace
        run: mkdir -p ./accuracy/accuracy_report

      - name: Download only current run reports
        uses: actions/download-artifact@v4
        with:
          path: ./accuracy/accuracy_report
          pattern: report-*
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.run_id }}

      - name: Delete old report
        run: |
          find ./accuracy/accuracy_report -maxdepth 1 -type f -name '*.md' ! -name 'index.md' -delete
          find ./accuracy/accuracy_report -mindepth 2 -type f -name '*.md' -exec mv -f {} ./accuracy/accuracy_report \;
          find ./accuracy/accuracy_report -mindepth 1 -type d -empty -delete
      - name: Generate step summary
        if: ${{ always() }}
        run: |
          for report in ./accuracy/accuracy_report/*.md; do
            filename=$(basename "$report")
            # skip index.md
            if [ "$filename" = "index.md" ]; then
              continue
            fi
            if [ -f "$report" ]; then
              {
                echo -e "\n\n---\n"
                echo "## 📄 Report File: $(basename $report)"
                cat "$report"
              } >> "$GITHUB_STEP_SUMMARY"
            fi
          done
      - name: Delete failed reports
        run: |
          for report in ./accuracy/accuracy_report/*.md; do
            [[ "$(basename "$report")" == "index.md" ]] && continue
            first_line=$(head -n 1 "$report")
            echo "Checking $report: $first_line"
            if [[ "$first_line" == *"❌"* ]]; then
              echo "❌ failure detected in $report, deleting..."
              rm "$report"
            fi
          done
      - name: Update accuracy_report/index.md
        run: |
          REPORT_DIR="./accuracy/accuracy_report"
          INDEX_MD="$REPORT_DIR/index.md"
          {
            echo "# Accuracy Report"
            echo ""
            echo "::: {toctree}"
            echo ":caption: Accuracy Report"
            echo ":maxdepth: 1"
            
            for report in "$REPORT_DIR"/*.md; do
              filename="$(basename "$report" .md)"
              if [ "$filename" != "index" ]; then
                echo "$filename"
              fi
            done
            echo ":::"
          } > "$INDEX_MD"
      - name: push accuracy report
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git add ./accuracy/accuracy_report/*.md
          git commit -s -m "[Doc] Update accuracy reports for ${{ github.event.inputs.vllm-ascend-branch }}"
          git push -f origin "${{ env.BRANCH_NAME }}"
      - name: Create PR in upstream via API
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const pr = await github.rest.pulls.create({
              owner: 'nv-action',
              repo: 'vllm-benchmarks',
              head: `${{ github.actor }}:${{ env.BRANCH_NAME }}`,
              base: '${{ github.event.inputs.benchmark-branch }}',
              title: `[Doc] Update accuracy reports for ${{ github.event.inputs.vllm-ascend-branch }}`,
              body: `The accuracy results running on NPU Altlas A2 have changed, updating reports for:
            ${{ 
              github.event.inputs.models == 'all' 
                && 'All models (Qwen2.5-7B-Instruct, Qwen2.5-VL-7B-Instruct, Qwen3-8B-Base)' 
                || github.event.inputs.models 
            }}
            
            - [Workflow run][1]
            
            [1]: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`
            });
            core.info(`Created PR #${pr.data.number}`);
 